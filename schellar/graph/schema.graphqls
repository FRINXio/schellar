type Schedule {
  name: String!
  enabled: Boolean!
  parallelRuns: Boolean!
  workflowName: String!
  workflowVersion: String!
  cronString: String!
  workflowContext: String!
  fromDate: DateTime!
  toDate: DateTime!
  status: String!
}

scalar DateTime
scalar JSON

type Query {
  schedule(name: String!): Schedule
  schedules(
    after: String
    before: String
    first: Int
    last: Int
    filter: SchedulesFilterInput
  ): [Schedule]
}

type Mutation {
  createSchedule(input: CreateScheduleInput!): Schedule!
  updateSchedule(name: String!, input: UpdateScheduleInput!): Schedule!
  deleteSchedule(name: String!): Boolean!
}

schema {
  query: Query
  mutation: Mutation
}

input CreateScheduleInput {
  name: String!
  workflowName: String!
  workflowVersion: String!
  cronString: String!
  enabled: Boolean
  parallelRuns: Boolean
  workflowContext: String
  fromDate: DateTime
  toDate: DateTime
}

input UpdateScheduleInput {
  workflowName: String
  workflowVersion: String
  cronString: String
  enabled: Boolean
  parallelRuns: Boolean
  workflowContext: String
  fromDate: DateTime
  toDate: DateTime
}

input SchedulesFilterInput {
  workflowName: String!
  workflowVersion: String!
}