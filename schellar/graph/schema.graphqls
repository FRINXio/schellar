type Schedule {
  id: ID!
  name: String!
  enabled: Boolean!
  parallelRuns: Boolean!
  workflowName: String!
  workflowVersion: String!
  cronString: String!
  workflowContext: String!
  fromDate: DateTime!
  toDate: DateTime!
  status: String!
}

scalar DateTime
scalar JSON

type Query {
  schedule(name: String!): Schedule
  schedules(filter: SchedulesFilterInput): [Schedule]
}

type Mutation {
  createSchedule(input: CreateScheduleInput!): Schedule!
  updateSchedule(input: UpdateScheduleInput!): Schedule!
  deleteSchedule(name: String!): Boolean!
}

schema {
  query: Query
  mutation: Mutation
}

input CreateScheduleInput {
  name: String!
  enabled: Boolean!
  parallelRuns: Boolean!
  workflowName: String!
  workflowVersion: String!
  cronString: String!
  workflowContext: JSON!
  fromDate: DateTime!
  toDate: DateTime!
}

input UpdateScheduleInput {
    name: String!
    enabled: Boolean!
    parallelRuns: Boolean!
    workflowName: String!
    workflowVersion: String!
    cronString: String!
    workflowContext: String!
    fromDate: DateTime!
    toDate: DateTime!
}

input SchedulesFilterInput {
    workflowName: String!
    workflowVersion: String!
}